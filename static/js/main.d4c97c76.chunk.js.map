{"version":3,"sources":["styles/GlobalStyle.js","api/index.js","reducer/page.js","hooks/InfinityScroll.js","components/Item.js","components/List.js","App.js","reducer/index.js","index.js"],"names":["globalStyle","css","reset","GlobalStyle","createGlobalStyle","axios","Axios","create","baseURL","commentsAPI","page","limit","get","params","_page","_limit","SET_COMMENT","SET_COMMENT_SUCCESS","SET_COMMENT_FAILURE","getComment","type","getCommentSuccess","data","payload","getCommentFailure","getCommentThunk","pageNum","dispatch","a","initialState","loading","error","comments","state","action","concat","InfinityScroll","children","useDispatch","useSelector","_handleScroll","func","delay","timeout","args","setTimeout","call","throttle","document","documentElement","body","scrollHeight","scrollTop","clientHeight","handleScroll","useCallback","useEffect","window","addEventListener","removeEventListener","Container","styled","article","Item","id","email","div","List","listRef","React","useRef","current","scrollIntoView","behavior","block","ref","map","comment","index","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4c97c76.chunk.js","sourcesContent":["import reset from \"styled-reset\";\nimport { createGlobalStyle, css } from \"styled-components\";\n\n//* 브라우저 기본 스타일 reset\nconst globalStyle = css`\n  ${reset};\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    ${globalStyle};\n`;\n\nexport default GlobalStyle;\n","import Axios from \"axios\";\r\n\r\nconst axios = Axios.create({\r\n  baseURL: `https://jsonplaceholder.typicode.com`,\r\n});\r\n\r\n//* GET API 요청하기\r\n//* https://jsonplaceholder.typicode.com/comments?_page=1&_limit=10\r\nexport const commentsAPI = (page, limit = 10) => {\r\n  return axios.get(`/comments`, {\r\n    params: {\r\n      _page: page,\r\n      _limit: limit,\r\n    },\r\n  });\r\n};\r\n\r\nexport default axios;\r\n","import { commentsAPI } from \"../api\";\r\n\r\n//* TYPE\r\nconst SET_COMMENT = \"page/SET_COMMNET\";\r\nconst SET_COMMENT_SUCCESS = \"page/SET_COMMENT_SUCCESS\";\r\nconst SET_COMMENT_FAILURE = \"page/SET_COMMNET_FAILURE\";\r\n\r\n//* ACTION 함수 생성\r\nexport const getComment = () => ({ type: SET_COMMENT });\r\nexport const getCommentSuccess = (data) => ({\r\n  type: SET_COMMENT_SUCCESS,\r\n  payload: data,\r\n});\r\nexport const getCommentFailure = (data) => ({\r\n  type: SET_COMMENT_FAILURE,\r\n  payload: data,\r\n});\r\n\r\n//* THUNK-ACTION 함수 생성\r\nexport const getCommentThunk =\r\n  (pageNum = 1) =>\r\n  async (dispatch) => {\r\n    dispatch(getComment());\r\n    try {\r\n      const { data } = await commentsAPI(pageNum);\r\n      dispatch(getCommentSuccess(data));\r\n    } catch (e) {\r\n      dispatch(getCommentFailure(e));\r\n    }\r\n  };\r\n\r\n//* 초기 상태\r\nconst initialState = {\r\n  page: 1,\r\n  loading: false,\r\n  error: null,\r\n  comments: [],\r\n};\r\n\r\n//* 리듀서\r\nfunction page(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_COMMENT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SET_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        page: state.page + 1,\r\n        loading: false,\r\n        error: null,\r\n        comments: state.comments.concat(action.payload),\r\n      };\r\n    case SET_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        comments: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default page;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCommentThunk } from \"../reducer/page\";\r\n\r\nfunction InfinityScroll({ children }) {\r\n  const dispatch = useDispatch();\r\n  const { page, loading } = useSelector((state) => state.page);\r\n\r\n  //* throttle 함수\r\n  const throttle = (func, delay) => {\r\n    let timeout = null;\r\n    return function (...args) {\r\n      if (!timeout) {\r\n        timeout = setTimeout(() => {\r\n          func.call(this, ...args);\r\n          timeout = null;\r\n        }, delay);\r\n      }\r\n    };\r\n  };\r\n\r\n  //* 화면 하단부까지 scroll되면, 새로운 comment 요청\r\n  const _handleScroll = throttle(() => {\r\n    const { scrollHeight, scrollTop, clientHeight } =\r\n      document.documentElement || document.body;\r\n\r\n    if (clientHeight + scrollTop === scrollHeight) {\r\n      dispatch(getCommentThunk(page));\r\n    }\r\n  }, 1000);\r\n\r\n  const handleScroll = useCallback(_handleScroll, [_handleScroll]);\r\n\r\n  //* scroll event 등록 및 해제\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return; //* 로딩중일 경우 중복 호출 방지\r\n    }\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [handleScroll, loading]);\r\n\r\n  return <div>{children}</div>;\r\n}\r\n\r\nexport default InfinityScroll;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Item({ id, email, body }) {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p>Comment Id</p> <span>{id}</span>\r\n      </div>\r\n      <div>\r\n        <p>Email</p>\r\n        <span> {email}</span>\r\n      </div>\r\n      <div>\r\n        <p>Comment</p> <span>{body}</span>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.article`\r\n  width: 500px;\r\n  min-height: 193px;\r\n\r\n  background: #f8f9fa;\r\n  border: 0.5px solid #ced4da;\r\n  border-radius: 20px;\r\n  color: #212529;\r\n  font-size: 18px;\r\n  line-height: 21px;\r\n\r\n  margin-bottom: 14px;\r\n  padding: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin-bottom: 12px;\r\n\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n    color: #212529;\r\n\r\n    p {\r\n      font-weight: 600;\r\n      margin-right: 12px;\r\n    }\r\n\r\n    span {\r\n      word-break: keep-all;\r\n    }\r\n\r\n    &:last-child {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-bottom: 0;\r\n\r\n      span {\r\n        padding-top: 2px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Item;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"./Item\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCommentThunk } from \"../reducer/page\";\r\n\r\nfunction List() {\r\n  const dispatch = useDispatch();\r\n  const { comments } = useSelector((state) => state.page);\r\n\r\n  //* 부드러운 화면 전환을 위해, Container div DOM에 지정\r\n  const listRef = React.useRef(null);\r\n\r\n  //* 처음 렌더링 시, page=1 호출\r\n  useEffect(() => {\r\n    dispatch(getCommentThunk());\r\n  }, [dispatch]);\r\n\r\n  //* commnet 변경 시, 페이지에 중앙으로 스크롤 이동\r\n  useEffect(() => {\r\n    listRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\",\r\n    });\r\n  }, [comments]);\r\n\r\n  return (\r\n    <Container ref={listRef}>\r\n      {comments.map((comment, index) => (\r\n        <Item key={`commnet${index}`} {...comment} />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default List;\r\n","import React from \"react\";\n\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport InfinityScroll from \"./hooks/InfinityScroll\";\nimport List from \"./components/List\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <InfinityScroll>\n        <List />\n      </InfinityScroll>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport page from \"./page\";\r\n\r\nconst rootReducer = combineReducers({ page });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport rootReducer from \"./reducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}